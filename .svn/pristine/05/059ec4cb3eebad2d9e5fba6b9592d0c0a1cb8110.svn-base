<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="pt">
<head>
<!-- Generated by javadoc (1.8.0_121) on Fri Mar 24 12:09:22 GMT 2017 -->
<title>State</title>
<meta name="date" content="2017-03-24">
<link rel="stylesheet" type="text/css" href="../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="State";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/State.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../../index.html?dkeep/logic/State.html" target="_top">Frames</a></li>
<li><a href="State.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">dkeep.logic</div>
<h2 title="Class State" class="title">Class State</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>dkeep.logic.State</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Serializable</dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">State</span>
extends java.lang.Object
implements java.io.Serializable</pre>
<div class="block">The bulk of the game logic.
 
 The State class manages the game elements, entities and characters and their behavior.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../serialized-form.html#dkeep.logic.State">Serialized Form</a></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Vector&lt;<a href="../../dkeep/logic/MassiveClub.html" title="class in dkeep.logic">MassiveClub</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#allClubs">allClubs</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>char[][]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#board">board</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Vector&lt;<a href="../../dkeep/logic/Door.html" title="class in dkeep.logic">Door</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#doors">doors</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Vector&lt;<a href="../../dkeep/logic/Entity.html" title="class in dkeep.logic">Entity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#entities">entities</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../dkeep/logic/Hero.html" title="class in dkeep.logic">Hero</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#hero">hero</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../dkeep/logic/Key.html" title="class in dkeep.logic">Key</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#key">key</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#lever">lever</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#won">won</a></span></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#State--">State</a></span>()</code>
<div class="block">Creates a game.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#State-char:A:A-">State</a></span>(char[][]&nbsp;nivel)</code>
<div class="block">Creates a game.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#adjacent-int-int-int-int-">adjacent</a></span>(int&nbsp;x1,
        int&nbsp;y1,
        int&nbsp;x2,
        int&nbsp;y2)</code>
<div class="block">Checks if two matrix cells are adjacent.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#adjacentToClub--">adjacentToClub</a></span>()</code>
<div class="block">Checks if the player is adjacent to any ogre's clubs.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#adjacentToGuard-dkeep.logic.Guard-">adjacentToGuard</a></span>(<a href="../../dkeep/logic/Guard.html" title="class in dkeep.logic">Guard</a>&nbsp;guard)</code>
<div class="block">Checks if the player is adjacent to a guard.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#adjacentToOgre-dkeep.logic.Ogre-">adjacentToOgre</a></span>(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</code>
<div class="block">Checks if the player is adjacent to an ogre.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#calculateNewX-int-int-">calculateNewX</a></span>(int&nbsp;movement,
             int&nbsp;x)</code>
<div class="block">Calculates the player's new column based on the direction they're heading.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#calculateNewY-int-int-">calculateNewY</a></span>(int&nbsp;movement,
             int&nbsp;y)</code>
<div class="block">Calculates the player's new line based on the direction they're heading.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#checkForExit--">checkForExit</a></span>()</code>
<div class="block">Checks if the hero exited the room.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#checkForKey--">checkForKey</a></span>()</code>
<div class="block">Checks if the hero stepped on the key cell.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#checkForKey-int-int-">checkForKey</a></span>(int&nbsp;newX,
           int&nbsp;newY)</code>
<div class="block">Checks if the player is about to get a key.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#checkIfLose--">checkIfLose</a></span>()</code>
<div class="block">Checks if the player lost (i.e. is next to an attacking entity).</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#checkIfWin-int-int-">checkIfWin</a></span>(int&nbsp;newX,
          int&nbsp;newY)</code>
<div class="block">Checks if the player is about to exit a door.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#checkMove-int-int-int-">checkMove</a></span>(int&nbsp;movement,
         int&nbsp;x,
         int&nbsp;y)</code>
<div class="block">Checks if the move is possible.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#cleanUpClubs-dkeep.logic.Ogre-">cleanUpClubs</a></span>(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</code>
<div class="block">Removes from the board an ogre's clubs (since their movement is not always linear).</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#moveClub-dkeep.logic.Ogre-">moveClub</a></span>(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</code>
<div class="block">Swings an ogre's club.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#moveEntities--">moveEntities</a></span>()</code>
<div class="block">Moves the board's entities.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#moveGuard-dkeep.logic.Entity-">moveGuard</a></span>(<a href="../../dkeep/logic/Entity.html" title="class in dkeep.logic">Entity</a>&nbsp;element)</code>
<div class="block">Moves an element that's an instance of Guard.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#moveOgre-dkeep.logic.Entity-">moveOgre</a></span>(<a href="../../dkeep/logic/Entity.html" title="class in dkeep.logic">Entity</a>&nbsp;element)</code>
<div class="block">Moves an element that's an instance of Ogre.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#movingOgreRoutine-dkeep.logic.Ogre-">movingOgreRoutine</a></span>(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</code>
<div class="block">Moves a non-stunned ogre</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#openDoors--">openDoors</a></span>()</code>
<div class="block">Opens the level's dungeons.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#printBoard--">printBoard</a></span>()</code>
<div class="block">Prints the game board.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#printClub-int-int-">printClub</a></span>(int&nbsp;newX,
         int&nbsp;newY)</code>
<div class="block">Places on the board an ogre's massive club.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#startDoor-int-int-">startDoor</a></span>(int&nbsp;i,
         int&nbsp;j)</code>
<div class="block">Creates a door in the level.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#startEntities--">startEntities</a></span>()</code>
<div class="block">Starts the game's entities with random values.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#startEntities-int-int-">startEntities</a></span>(int&nbsp;guards,
             int&nbsp;ogres)</code>
<div class="block">Starts the game entities existent in the game.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#startGuards-int-int-int-">startGuards</a></span>(int&nbsp;guards,
           int&nbsp;i,
           int&nbsp;j)</code>
<div class="block">Creates the level's guards.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#startOgres-int-int-int-">startOgres</a></span>(int&nbsp;ogres,
          int&nbsp;i,
          int&nbsp;j)</code>
<div class="block">Creates the level's ogres.</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#stunnedOgreRoutine-dkeep.logic.Ogre-">stunnedOgreRoutine</a></span>(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</code>
<div class="block">Performs the stunned ogre routine (does not move, swings club)</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#stunOgre-dkeep.logic.Ogre-">stunOgre</a></span>(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;ogre)</code>
<div class="block">Stuns an ogre.</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#updateBoard-java.lang.Boolean-">updateBoard</a></span>(java.lang.Boolean&nbsp;lost)</code>
<div class="block">Updates the board.</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../dkeep/logic/State.html#updateEntity-char-int-int-int-int-">updateEntity</a></span>(char&nbsp;entity,
            int&nbsp;oldX,
            int&nbsp;oldY,
            int&nbsp;newX,
            int&nbsp;newY)</code>
<div class="block">Updates on the board an entity's location.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="won">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>won</h4>
<pre>public&nbsp;boolean won</pre>
</li>
</ul>
<a name="lever">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lever</h4>
<pre>public&nbsp;boolean lever</pre>
</li>
</ul>
<a name="board">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>board</h4>
<pre>public&nbsp;char[][] board</pre>
</li>
</ul>
<a name="entities">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>entities</h4>
<pre>public&nbsp;java.util.Vector&lt;<a href="../../dkeep/logic/Entity.html" title="class in dkeep.logic">Entity</a>&gt; entities</pre>
</li>
</ul>
<a name="allClubs">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>allClubs</h4>
<pre>public&nbsp;java.util.Vector&lt;<a href="../../dkeep/logic/MassiveClub.html" title="class in dkeep.logic">MassiveClub</a>&gt; allClubs</pre>
</li>
</ul>
<a name="doors">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>doors</h4>
<pre>public&nbsp;java.util.Vector&lt;<a href="../../dkeep/logic/Door.html" title="class in dkeep.logic">Door</a>&gt; doors</pre>
</li>
</ul>
<a name="hero">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>hero</h4>
<pre>public&nbsp;<a href="../../dkeep/logic/Hero.html" title="class in dkeep.logic">Hero</a> hero</pre>
</li>
</ul>
<a name="key">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>key</h4>
<pre>public&nbsp;<a href="../../dkeep/logic/Key.html" title="class in dkeep.logic">Key</a> key</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="State--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>State</h4>
<pre>public&nbsp;State()</pre>
<div class="block">Creates a game.</div>
</li>
</ul>
<a name="State-char:A:A-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>State</h4>
<pre>public&nbsp;State(char[][]&nbsp;nivel)</pre>
<div class="block">Creates a game.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nivel</code> - the game level to be started.</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><code>startEntities</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="updateEntity-char-int-int-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateEntity</h4>
<pre>public&nbsp;void&nbsp;updateEntity(char&nbsp;entity,
                         int&nbsp;oldX,
                         int&nbsp;oldY,
                         int&nbsp;newX,
                         int&nbsp;newY)</pre>
<div class="block">Updates on the board an entity's location.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>entity</code> - the entity's character representation</dd>
<dd><code>oldX</code> - the old x coordinate</dd>
<dd><code>oldY</code> - the old y coordinate</dd>
<dd><code>newX</code> - the new x coordinate</dd>
<dd><code>newY</code> - the new y coordinate</dd>
</dl>
</li>
</ul>
<a name="printClub-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>printClub</h4>
<pre>public&nbsp;void&nbsp;printClub(int&nbsp;newX,
                      int&nbsp;newY)</pre>
<div class="block">Places on the board an ogre's massive club.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newX</code> - the club's new x coordinate</dd>
<dd><code>newY</code> - the club's new y coordinate.</dd>
</dl>
</li>
</ul>
<a name="adjacent-int-int-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>adjacent</h4>
<pre>public&nbsp;boolean&nbsp;adjacent(int&nbsp;x1,
                        int&nbsp;y1,
                        int&nbsp;x2,
                        int&nbsp;y2)</pre>
<div class="block">Checks if two matrix cells are adjacent.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>x1</code> - the first cell's x coordinate</dd>
<dd><code>y1</code> - the first cell's y coordinate</dd>
<dd><code>x2</code> - the second cell's x coordinate</dd>
<dd><code>y2</code> - the second cell's y coordinate</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the cells are adjacent, false if otherwise</dd>
</dl>
</li>
</ul>
<a name="startGuards-int-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startGuards</h4>
<pre>public&nbsp;void&nbsp;startGuards(int&nbsp;guards,
                        int&nbsp;i,
                        int&nbsp;j)</pre>
<div class="block">Creates the level's guards.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>guards</code> - the guard personality (0 for rookie, 1 for drunken, 2 for suspicious)</dd>
<dd><code>i</code> - the guard's starting column</dd>
<dd><code>j</code> - the guard's starting row</dd>
</dl>
</li>
</ul>
<a name="startOgres-int-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startOgres</h4>
<pre>public&nbsp;void&nbsp;startOgres(int&nbsp;ogres,
                       int&nbsp;i,
                       int&nbsp;j)</pre>
<div class="block">Creates the level's ogres.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>ogres</code> - the number of ogres</dd>
<dd><code>i</code> - the ogres' starting column</dd>
<dd><code>j</code> - the ogres' starting row</dd>
</dl>
</li>
</ul>
<a name="startDoor-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startDoor</h4>
<pre>public&nbsp;void&nbsp;startDoor(int&nbsp;i,
                      int&nbsp;j)</pre>
<div class="block">Creates a door in the level.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>i</code> - the door row</dd>
<dd><code>j</code> - the door column</dd>
</dl>
</li>
</ul>
<a name="startEntities-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startEntities</h4>
<pre>public&nbsp;void&nbsp;startEntities(int&nbsp;guards,
                          int&nbsp;ogres)</pre>
<div class="block">Starts the game entities existent in the game.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>guards</code> - type of guard</dd>
<dd><code>ogres</code> - number of ogres</dd>
</dl>
</li>
</ul>
<a name="startEntities--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>startEntities</h4>
<pre>public&nbsp;void&nbsp;startEntities()</pre>
<div class="block">Starts the game's entities with random values.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../dkeep/logic/State.html#startEntities-int-int-"><code>startEntities(int, int)</code></a></dd>
</dl>
</li>
</ul>
<a name="checkForKey--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkForKey</h4>
<pre>public&nbsp;void&nbsp;checkForKey()</pre>
<div class="block">Checks if the hero stepped on the key cell.</div>
</li>
</ul>
<a name="openDoors--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>openDoors</h4>
<pre>public&nbsp;void&nbsp;openDoors()</pre>
<div class="block">Opens the level's dungeons.</div>
</li>
</ul>
<a name="checkForExit--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkForExit</h4>
<pre>public&nbsp;boolean&nbsp;checkForExit()</pre>
<div class="block">Checks if the hero exited the room.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the hero has exited, false if otherwise</dd>
</dl>
</li>
</ul>
<a name="moveEntities--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveEntities</h4>
<pre>public&nbsp;void&nbsp;moveEntities()</pre>
<div class="block">Moves the board's entities.</div>
</li>
</ul>
<a name="moveGuard-dkeep.logic.Entity-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveGuard</h4>
<pre>public&nbsp;void&nbsp;moveGuard(<a href="../../dkeep/logic/Entity.html" title="class in dkeep.logic">Entity</a>&nbsp;element)</pre>
<div class="block">Moves an element that's an instance of Guard.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>element</code> - the guard</dd>
</dl>
</li>
</ul>
<a name="cleanUpClubs-dkeep.logic.Ogre-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>cleanUpClubs</h4>
<pre>public&nbsp;void&nbsp;cleanUpClubs(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</pre>
<div class="block">Removes from the board an ogre's clubs (since their movement is not always linear).</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>shrek</code> - the ogre</dd>
</dl>
</li>
</ul>
<a name="moveClub-dkeep.logic.Ogre-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveClub</h4>
<pre>public&nbsp;void&nbsp;moveClub(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</pre>
<div class="block">Swings an ogre's club.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>shrek</code> - the ogre</dd>
</dl>
</li>
</ul>
<a name="stunnedOgreRoutine-dkeep.logic.Ogre-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stunnedOgreRoutine</h4>
<pre>public&nbsp;void&nbsp;stunnedOgreRoutine(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</pre>
<div class="block">Performs the stunned ogre routine (does not move, swings club)</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>shrek</code> - the stunned ogre</dd>
</dl>
</li>
</ul>
<a name="movingOgreRoutine-dkeep.logic.Ogre-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>movingOgreRoutine</h4>
<pre>public&nbsp;void&nbsp;movingOgreRoutine(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</pre>
<div class="block">Moves a non-stunned ogre</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>shrek</code> - the ogre</dd>
</dl>
</li>
</ul>
<a name="moveOgre-dkeep.logic.Entity-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveOgre</h4>
<pre>public&nbsp;void&nbsp;moveOgre(<a href="../../dkeep/logic/Entity.html" title="class in dkeep.logic">Entity</a>&nbsp;element)</pre>
<div class="block">Moves an element that's an instance of Ogre.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>element</code> - the guard</dd>
</dl>
</li>
</ul>
<a name="updateBoard-java.lang.Boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>updateBoard</h4>
<pre>public&nbsp;boolean&nbsp;updateBoard(java.lang.Boolean&nbsp;lost)</pre>
<div class="block">Updates the board.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>lost</code> - given to know if the player has lost the game</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the player has won, false if the game is still ongoing</dd>
</dl>
</li>
</ul>
<a name="printBoard--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>printBoard</h4>
<pre>public&nbsp;void&nbsp;printBoard()</pre>
<div class="block">Prints the game board.</div>
</li>
</ul>
<a name="checkMove-int-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkMove</h4>
<pre>public&nbsp;boolean&nbsp;checkMove(int&nbsp;movement,
                         int&nbsp;x,
                         int&nbsp;y)</pre>
<div class="block">Checks if the move is possible.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>movement</code> - the direction</dd>
<dd><code>x</code> - the entity's column</dd>
<dd><code>y</code> - the entity's row</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if possible, false otherwise</dd>
</dl>
</li>
</ul>
<a name="adjacentToOgre-dkeep.logic.Ogre-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>adjacentToOgre</h4>
<pre>public&nbsp;void&nbsp;adjacentToOgre(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;shrek)</pre>
<div class="block">Checks if the player is adjacent to an ogre.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>shrek</code> - the ogre being tested</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><code>checkIfLose</code></dd>
</dl>
</li>
</ul>
<a name="adjacentToGuard-dkeep.logic.Guard-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>adjacentToGuard</h4>
<pre>public&nbsp;boolean&nbsp;adjacentToGuard(<a href="../../dkeep/logic/Guard.html" title="class in dkeep.logic">Guard</a>&nbsp;guard)</pre>
<div class="block">Checks if the player is adjacent to a guard.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>guard</code> - the guard being tested</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if they are adjacent to an alert guard, false if otherwise</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><code>checkIfLose</code></dd>
</dl>
</li>
</ul>
<a name="checkIfLose--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkIfLose</h4>
<pre>public&nbsp;boolean&nbsp;checkIfLose()</pre>
<div class="block">Checks if the player lost (i.e. is next to an attacking entity).</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if they lost, false if otherwise</dd>
</dl>
</li>
</ul>
<a name="stunOgre-dkeep.logic.Ogre-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>stunOgre</h4>
<pre>public&nbsp;boolean&nbsp;stunOgre(<a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic">Ogre</a>&nbsp;ogre)</pre>
<div class="block">Stuns an ogre.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>ogre</code> - the ogre being stunned</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the ogre was stunned, false if otherwise</dd>
</dl>
</li>
</ul>
<a name="adjacentToClub--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>adjacentToClub</h4>
<pre>public&nbsp;boolean&nbsp;adjacentToClub()</pre>
<div class="block">Checks if the player is adjacent to any ogre's clubs.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the player is adjacent to a club, false if otherwise.</dd>
</dl>
</li>
</ul>
<a name="checkIfWin-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkIfWin</h4>
<pre>public&nbsp;boolean&nbsp;checkIfWin(int&nbsp;newX,
                          int&nbsp;newY)</pre>
<div class="block">Checks if the player is about to exit a door.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newX</code> - the hero's new column</dd>
<dd><code>newY</code> - the hero's new line</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if they are about to exit, false if otherwise</dd>
</dl>
</li>
</ul>
<a name="checkForKey-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>checkForKey</h4>
<pre>public&nbsp;boolean&nbsp;checkForKey(int&nbsp;newX,
                           int&nbsp;newY)</pre>
<div class="block">Checks if the player is about to get a key.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>newX</code> - the player's new column</dd>
<dd><code>newY</code> - the player's new line</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if the player got a key, false if otherwise.</dd>
</dl>
</li>
</ul>
<a name="calculateNewX-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>calculateNewX</h4>
<pre>public&nbsp;int&nbsp;calculateNewX(int&nbsp;movement,
                         int&nbsp;x)</pre>
<div class="block">Calculates the player's new column based on the direction they're heading.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>movement</code> - the player's direction (1 is up, 2 is down, 3 is left and 4 is right)</dd>
<dd><code>x</code> - the player's current column</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the new column</dd>
</dl>
</li>
</ul>
<a name="calculateNewY-int-int-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>calculateNewY</h4>
<pre>public&nbsp;int&nbsp;calculateNewY(int&nbsp;movement,
                         int&nbsp;y)</pre>
<div class="block">Calculates the player's new line based on the direction they're heading.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>movement</code> - the player's direction (1 is up, 2 is down, 3 is left and 4 is right)</dd>
<dd><code>x</code> - the player's current line</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the new line</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/State.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../dkeep/logic/Ogre.html" title="class in dkeep.logic"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../../index.html?dkeep/logic/State.html" target="_top">Frames</a></li>
<li><a href="State.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
